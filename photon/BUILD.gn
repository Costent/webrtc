# Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

# TODO(kjellander): Rebase this to webrtc/build/common.gypi changes after r6330.

import("//build/config/linux/pkg_config.gni")
import("//build/config/sanitizers/sanitizers.gni")
import("//webrtc/build/webrtc.gni")
import("//third_party/protobuf/proto_library.gni")

if (is_mac || is_linux || is_win) {
  config("photon_warnings_config") {
    if (is_win && is_clang) {
      cflags = [
        # Disable warnings failing when compiling with Clang on Windows.
        # https://bugs.chromium.org/p/webrtc/issues/detail?id=5366
        "-Wno-format",

        # See https://bugs.chromium.org/p/webrtc/issues/detail?id=6271
        # for -Wno-reorder and -Wno-sign-compare
        "-Wno-reorder",
        "-Wno-sign-compare",
      ]
    }
    if (is_linux && target_cpu == "x86") {
      cflags = [
        # Needed to compile on Linux 32-bit.
        "-Wno-sentinel",
      ]
    }
  }

  rtc_executable("photon") {
    # include_dirs = [
    #   "/usr/local/Cellar/boost/1.61.0_1/include",
    # ]
    # libs = [
    #   "boost_system",
    #   "boost_thread-mt",
    # ]
    # lib_dirs = [
    #  "/usr/local/Cellar/boost/1.61.0_1/lib",
    # ]
    
    if (is_win) {
      cflags = [ "/EHsc" ]
      lib_dirs = [
        "C:\Users\Nanocloud\boost_1_60_0\stage\lib"
      ]
      
      libs = [
        "libboost_system-vc140-mt-gd-1_60.lib",
        "libboost_thread-vc140-mt-gd-1_60.lib",
      ]
      
      include_dirs = [
        "C:\\Users\\Nanocloud\\boost_1_60_0",
      ]
    }

    sources = [
      "conductor.cc",
      "conductor.h",
      "http/server/connection.cc",
      "http/server/connection.h",
      "http/server/connection_manager.cc",
      "http/server/connection_manager.h",
      "data_socket.cc",
      "data_socket.h",
      "defaults.cc",
      "defaults.h",
      "http/server/header.h",
      "main.cc",
      "http/server/reply.cc",
      "http/server/reply.h",
      "http/server/request.h",
      "http/server/request_handler.h",
      "http/server/request_parser.cc",
      "http/server/request_parser.h",
      "http/server/server.cc",
      "http/server/server.h",
      "utils.cc",
      "utils.h",
    ]

    # TODO: Make photon compile with the standard
    # set of warnings.
    # See https://bugs.chromium.org/p/webrtc/issues/detail?id=6306
    suppressed_configs += [ rtc_common_config ]
    if (is_clang) {
      # Suppress warnings from the Chromium Clang plugin.
      # See http://code.google.com/p/webrtc/issues/detail?id=163 for details.
      suppressed_configs += [ "//build/config/clang:find_bad_constructs" ]
    }
    deps = [
      "//third_party/libyuv",
      "//webrtc/api:libjingle_peerconnection",
      "//webrtc/system_wrappers:field_trial_default",
      "//webrtc/system_wrappers:metrics_default",
    ]
    configs += [ ":photon_warnings_config" ]
    if (rtc_build_json) {
      deps += [ "//third_party/jsoncpp" ]
    }
  }
}
